
#user  nobody;
worker_processes  2;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  4096;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    server {
        listen       80;
        server_name  haxejs.com;

        #charset koi8-r;

        #access_log  logs/haxejs.com.access.log;

	 #return 301  $scheme://www.haxejs.com$request_uri;

        location / {
        	try_files $uri @prerender;
    	 }

    location @prerender {        
        proxy_set_header X-Prerender-Token 1QqgeqWZ1YckAfzkDgzi;

        set $prerender 0;
        if ($http_user_agent ~* "baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }
        if ($uri ~ "\.(json|js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent)") {
          set $prerender 0;
        }
 
        if ($prerender = 1) {
            rewrite .* /$scheme://www.haxejs.com$request_uri? break;
            proxy_pass http://service.prerender.io;	     
        }
        if ($prerender = 0) {
            #rewrite .* /index.html break;
	     proxy_pass http://www.haxejs.com;
        }
    }

	 #root	html;
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # Forum server
    server {
        listen       80;
        server_name  forum.haxejs.com;

	location / {
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header Host $http_host;
	    proxy_set_header X-NginX-Proxy true;
	    proxy_pass http://127.0.0.1:4567/;
	    proxy_redirect off;
	    # Socket.IO Support
	    proxy_http_version 1.1;
	    proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection "upgrade";
	}
    }

    # podcast server
    server {
        listen       80;
        server_name  podcast.haxejs.com;

        location / {
            root   /opt/podcast;
            index  index.html index.htm;
        }
    }

    # picviewer server
    server {
        listen       80;
        server_name  picviewer.haxejs.com;

        location / {
            root   /opt/picviewer;
            index  index.html index.htm;
        }
    }

    # Demo server
    server {
        listen       80;
        server_name  demo.haxejs.com;
        add_header   Access-Control-Allow-Origin *;

	location / {
	    root   /opt/demo;
	    index  index.html index.htm;
	}

    location /playlist {
        proxy_pass http://www.youku.com;
    }

    # http://demo.haxejs.com/rss2?url=www.eslpod.com/feed.xml
    location /rss2 {
        rewrite .* /p/$arg_url break;
        proxy_pass http://127.0.0.1:3333;
    }

	location /http-bind {
	    #strophe.js does heartbeat every 60s, so we set timeout 600s here
	    proxy_connect_timeout       600;
	    proxy_send_timeout          600;
	    proxy_read_timeout          600;
	    send_timeout                600;
	    proxy_pass http://127.0.0.1:7070/http-bind/;
	}
    }

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
